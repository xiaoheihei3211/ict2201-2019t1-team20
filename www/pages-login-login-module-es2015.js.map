{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color='light'>\\r\\n    <ion-title>Login</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n      <app-logo></app-logo>\\r\\n      <ion-list>\\r\\n          <div padding>\\r\\n          <ion-item>\\r\\n            <ion-icon item-left name=\\\"person\\\" color=\\\"secondary\\\"></ion-icon>\\r\\n            <ion-input type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-icon medium item-left name=\\\"lock\\\" color=\\\"secondary\\\"></ion-icon>\\r\\n            <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          </div>\\r\\n        <ion-button expand=\\\"block\\\" share=\\\"round\\\" color=\\\"success\\\" (click)=\\\"verifyLogin()\\\" [disabled]=\\\"!email || !password\\\" >Login</ion-button>\\r\\n        <div padding class=\\\"center\\\">\\r\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"loadForgotpasswordPage()\\\">Forgot Password?</ion-button>\\r\\n              <br>\\r\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"navigatetoRegisterPage()\\\">New user? Sign up</ion-button>\\r\\n        </div>\\r\\n      </ion-list>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\n//import to use app-slides from ComponentsModule\nimport { ComponentsModule } from './../../components/components.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\n\nimport { AlertController } from '@ionic/angular';\n\nimport { Router } from '@angular/router';\n\nimport { UserReg } from '../../user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  email: string = \"\"\n  password: string = \"\"\n  commute: string\n  mobile: string\n\n  constructor(public afAuth: AngularFireAuth , private alertController: AlertController, private router : Router, public user: UserReg) { }\n\n  ngOnInit() {\n  }\n\n  async verifyLogin() {\n\n    const { email, password, commute, mobile } = this\n    const alert = await this.alertController.create({    //pop-up alert function\n      header: 'Error',\n      subHeader: 'Email/Password not found',\n      message: 'Your Credentials are incorrect',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel'\n      }]\n    });\n\n    const loginAttempts = await this.alertController.create({     //pop-up alert function\n      header: 'Error',\n      subHeader: 'Too many tries',\n      message: 'Your application has been disabled',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel'\n      }]\n    });\n\n    const VerifyAlert = await this.alertController.create({     //pop-up alert function\n      header: 'Take Note',\n      subHeader: 'Email Verification',\n      message: 'Please Verify Your Account in your email.',\n      buttons: [{\n        text: 'Ok',\n        role: 'cancel'\n      }]\n    });\n\n    const Welcome = await this.alertController.create({    //pop-up alert function\n      header: 'Take Note',\n      subHeader: 'Email Verified',\n      message: 'Please proceed to login',\n      buttons: [{\n        text: 'Ok',\n        role: 'cancel'\n      }]\n    });\n\n    try {\n      const res = await this.afAuth.auth.signInWithEmailAndPassword(this.email, this.password)\n      if(res.user.emailVerified) {\n         console.log(\"email verified\");\n         this.router.navigate(['home/navigate']);\n        // Redirect the user here\n      } else {\n        // Tell the user to have a look at its mailbox\n         await VerifyAlert.present()\n         this.sendEmailVerification(email);\n       }\n      if(res.user) {\n        this.user.setUser({\n          email,\n          commute,\n          mobile,\n          uid: res.user.uid\n        })\n\n\n      }\n\n    }\n    catch(err) {\n      console.dir(err)\n      await alert.present()\n    }\n\n  }\n\nnavigatetoRegisterPage() {\n\n    this.router.navigate(['register']);\n  }\n\n\n\nsendEmailVerification(email) {\n  this.afAuth.authState.subscribe(user => {\n      user.sendEmailVerification()\n      .then(() => {\n        console.log('email sent');\n      })\n    });\n}\n\nloadForgotpasswordPage() {\n  this.router.navigate(['forgetpass']);\n}\n\n}\n\n/*\ntestcase1(){\n  const res = await this.afAuth.auth.signInWithEmailAndPassword(\"abc123.com\", this.password)\n  console.dir(err)==\"auth/invalid email\"\n\n}\n*/\n"],"sourceRoot":""}